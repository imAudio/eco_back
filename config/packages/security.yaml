security:
    # Configuration du hachage des mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Configuration des fournisseurs d'utilisateurs
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)

    # Configuration des firewalls
    firewalls:
        # Section de développement (dev)
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall pour l'authentification par formulaire JSON (route de login)
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Firewall pour les routes protégées utilisant JWT
        api:
            pattern: ^/api
            stateless: true
            jwt: ~  # Utilise JWT pour les routes protégées sous /api

        # Firewall principal pour les autres routes
        main:
            lazy: true
            provider: app_user_provider

    # Contrôle d'accès aux différentes routes
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

# Configuration pour les environnements de test
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Baisse du coût pour les tests (bcrypt)
                time_cost: 3 # Baisse du coût pour les tests (argon)
                memory_cost: 10 # Baisse du coût pour les tests (argon)
